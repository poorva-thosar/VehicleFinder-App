<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.firebaseloginapp"
    android:versionCode="1"
    android:versionName="1.0" >

    <uses-sdk
        android:minSdkVersion="21"
        android:targetSdkVersion="26" />

    <uses-permission android:name="android.permission.INTERNET" />
    -

    <!-- Include required permissions for Google Maps API to run. -->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />

    <uses-feature
        android:glEsVersion="0x00020000"
        android:required="true" />

    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />

    <permission
        android:name="com.firebaseloginapp.permission.C2D_MESSAGE"
        android:protectionLevel="signature" />

    <uses-permission android:name="com.firebaseloginapp.permission.C2D_MESSAGE" />

    <application
        android:allowBackup="true"
        android:debuggable="true"
        android:icon="@mipmap/ic_launcher_round"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme" >

        <!-- NEWELY ADDED -->
        <service android:name="com.firebaseloginapp.AccountActivity.MyFirebaseMessagingService" >
            <intent-filter>
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>
        <service android:name="com.firebaseloginapp.AccountActivity.MyFirebaseInstanceIDService" >
            <intent-filter>
                <action android:name="com.google.firebase.INSTANCE_ID_EVENT" />
            </intent-filter>
        </service>

        <!--
 Set custom default icon. This is used when no icon is set for incoming notification messages.
 See README(https://goo.gl/l4GJaQ) for more.
        -->
        <!-- <meta-data -->
        <!-- android:name="com.google.firebase.messaging.default_notification_icon" -->
        <!-- android:resource="@drawable/ic_stat_ic_notification" /> -->
        <!-- &lt;!&ndash; Set color used with incoming notification messages. This is used when no color is set for the incoming -->
        <!-- notification message. See README(https://goo.gl/6BKBk7) for more. &ndash;&gt; -->
        <!-- <meta-data -->
        <!-- android:name="com.google.firebase.messaging.default_notification_color" -->
        <!-- android:resource="@color/colorAccent" /> -->


        <!-- <meta-data android:name="firebase_messaging_auto_init_enabled" -->
        <!-- android:value="false" /> -->


        <!-- NEWLY ADDED -->

        <activity
            android:name="com.firebaseloginapp.AccountActivity.LoginActivity"
            android:label="@string/app_name" >
        </activity>
        <activity android:name="com.firebaseloginapp.AccountActivity.SignupActivity" />
        <activity android:name="com.firebaseloginapp.AccountActivity.ResetPasswordActivity" />
        <activity
            android:name="com.firebaseloginapp.AccountActivity.MainActivity"
            android:label="@string/app_name" >
        </activity>
        <activity android:name="com.firebaseloginapp.AccountActivity.PageLost" />
        <activity android:name="com.firebaseloginapp.AccountActivity.PageFound" >
        </activity>
        <activity android:name="com.firebaseloginapp.AccountActivity.EntryActivity" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity android:name="com.firebaseloginapp.AccountActivity.ThankYou" />
        <activity android:name="com.firebaseloginapp.AccountActivity.Sorry" />

        <meta-data
            android:name="android.support.VERSION"
            android:value="26.1.0" />

        <provider
            android:name="com.crashlytics.android.CrashlyticsInitProvider"
            android:authorities="com.firebaseloginapp.crashlyticsinitprovider"
            android:exported="false"
            android:initOrder="100" />
        <!--
 FirebaseMessagingService performs security checks at runtime,
             no need for explicit permissions despite exported="true"
        -->
        <service
            android:name="com.google.firebase.messaging.FirebaseMessagingService"
            android:exported="true" >
            <intent-filter android:priority="-500" >
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>

        <receiver
            android:name="com.google.android.gms.measurement.AppMeasurementReceiver"
            android:enabled="true"
            android:exported="false" >
        </receiver>
        <receiver
            android:name="com.google.android.gms.measurement.AppMeasurementInstallReferrerReceiver"
            android:enabled="true"
            android:permission="android.permission.INSTALL_PACKAGES" >
            <intent-filter>
                <action android:name="com.android.vending.INSTALL_REFERRER" />
            </intent-filter>
        </receiver>

        <service
            android:name="com.google.android.gms.measurement.AppMeasurementService"
            android:enabled="true"
            android:exported="false" />

        <activity
            android:name="com.google.android.gms.common.api.GoogleApiActivity"
            android:exported="false"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />

        <receiver
            android:name="com.google.firebase.iid.FirebaseInstanceIdReceiver"
            android:exported="true"
            android:permission="com.google.android.c2dm.permission.SEND" >
            <intent-filter>
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />

                <category android:name="com.firebaseloginapp" />
            </intent-filter>
        </receiver>
        <!--
 Internal (not exported) receiver used by the app to start its own exported services
             without risk of being spoofed.
        -->
        <receiver
            android:name="com.google.firebase.iid.FirebaseInstanceIdInternalReceiver"
            android:exported="false" />
        <!--
 FirebaseInstanceIdService performs security checks at runtime,
             no need for explicit permissions despite exported="true"
        -->
        <service
            android:name="com.google.firebase.iid.FirebaseInstanceIdService"
            android:exported="true" >
            <intent-filter android:priority="-500" >
                <action android:name="com.google.firebase.INSTANCE_ID_EVENT" />
            </intent-filter>
        </service>

        <provider
            android:name="com.google.firebase.provider.FirebaseInitProvider"
            android:authorities="com.firebaseloginapp.firebaseinitprovider"
            android:exported="false"
            android:initOrder="100" /> <!-- Include the AdActivity and InAppPurchaseActivity configChanges and themes. -->
        <activity
            android:name="com.google.android.gms.ads.AdActivity"
            android:configChanges="keyboard|keyboardHidden|orientation|screenLayout|uiMode|screenSize|smallestScreenSize"
            android:theme="@android:style/Theme.Translucent" />
        <activity
            android:name="com.google.android.gms.ads.purchase.InAppPurchaseActivity"
            android:theme="@style/Theme.IAPTheme" />

        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version" />
        <meta-data
            android:name="android.arch.lifecycle.VERSION"
            android:value="27.0.0-SNAPSHOT" />
    </application>

</manifest>